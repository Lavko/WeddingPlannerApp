// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPA.backend.Helpers;

namespace WPA.backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WPA.backend.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adnotation");

                    b.Property<double>("Amount");

                    b.Property<double>("Deposit");

                    b.Property<int>("ExpenseStatus");

                    b.Property<string>("Name");

                    b.Property<int>("PlannerId");

                    b.Property<string>("Provider");

                    b.Property<int?>("ServiceProviderId");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("WPA.backend.Entities.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("PlannerId");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("WPA.backend.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adnotation");

                    b.Property<bool>("IsTravelling");

                    b.Property<string>("Name");

                    b.Property<int>("PlannerId");

                    b.Property<int>("Side");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("WPA.backend.Entities.Planner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CeremonyDate");

                    b.Property<string>("CeremonyPlace");

                    b.Property<DateTime>("WeddingDate");

                    b.Property<string>("WeddingPlace");

                    b.HasKey("Id");

                    b.ToTable("Planners");
                });

            modelBuilder.Entity("WPA.backend.Entities.ServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("ServiceTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("WPA.backend.Entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Order");

                    b.HasKey("Id");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("WPA.backend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("PlannerId");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WPA.backend.Entities.Expense", b =>
                {
                    b.HasOne("WPA.backend.Entities.Planner")
                        .WithMany("Expenses")
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WPA.backend.Entities.ServiceProvider", "ServiceProvider")
                        .WithMany()
                        .HasForeignKey("ServiceProviderId");
                });

            modelBuilder.Entity("WPA.backend.Entities.Fund", b =>
                {
                    b.HasOne("WPA.backend.Entities.Planner")
                        .WithMany("Funds")
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPA.backend.Entities.Guest", b =>
                {
                    b.HasOne("WPA.backend.Entities.Planner")
                        .WithMany("Guests")
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPA.backend.Entities.ServiceProvider", b =>
                {
                    b.HasOne("WPA.backend.Entities.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WPA.backend.Entities.User", b =>
                {
                    b.HasOne("WPA.backend.Entities.Planner", "Planner")
                        .WithMany()
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
